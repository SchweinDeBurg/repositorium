// Copyright (C) 2003-2005 AbstractSpoon Software.
//
// This license applies to everything in the ToDoList package, except where
// otherwise noted.
//
// This software is provided 'as-is', without any express or implied warranty.
// In no event will the authors be held liable for any damages arising from the
// use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software in a
// product, an acknowledgment in the product documentation would be appreciated
// but is not required.
//
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
//
// 3. This notice may not be removed or altered from any source distribution.

//*****************************************************************************
// Modified by Elijah Zarezky aka SchweinDeBurg (elijah.zarezky@gmail.com):
// - improved compatibility with the Unicode-based builds
// - added AbstractSpoon Software copyright notice and license information
// - adjusted #include's paths
// - reformatted using Artistic Style 2.02 with the following options:
//      --indent=tab=3
//      --indent=force-tab=3
//      --indent-cases
//      --max-instatement-indent=2
//      --style=allman
//      --add-brackets
//      --pad-oper
//      --unpad-paren
//      --pad-header
//      --align-pointer=type
//      --lineend=windows
//      --suffix=none
// - merged with ToDoList version 6.2.2 sources
//*****************************************************************************

#if !defined(AFX_TDCSTATIC_H__5951FDE6_508A_4A9D_A55D_D16EB026AEF7__INCLUDED_)
#define AFX_TDCSTATIC_H__5951FDE6_508A_4A9D_A55D_D16EB026AEF7__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

// TDCStatic.h : header file
//

#include "ToDoListApp.h"
#include "TDCStruct.h"

#include "../../../CodeProject/Source/WClassDefines.h"
#include "../../../CodeProject/Source/RCCtrlParser.h"

struct SHORTCUT
{
	DWORD dwShortcut;
	UINT nIDShortcut;
};

static SHORTCUT MISC_SHORTCUTS[] =
{
	{ MAKELONG('B', HOTKEYF_ALT | HOTKEYF_EXT), IDS_SETFOCUS2TASLIST },
	{ 0, 0 },
	{ MAKELONG(VK_UP, HOTKEYF_SHIFT | HOTKEYF_EXT), IDS_TASKLISTEXTENDEDSELECTION },
	{ MAKELONG(VK_DOWN, HOTKEYF_SHIFT | HOTKEYF_EXT), IDS_TASKLISTEXTENDEDSELECTION },
	{ MAKELONG(VK_PRIOR, HOTKEYF_SHIFT | HOTKEYF_EXT), IDS_TASKLISTEXTENDEDSELECTION },
	{ MAKELONG(VK_NEXT, HOTKEYF_SHIFT | HOTKEYF_EXT), IDS_TASKLISTEXTENDEDSELECTION },
};

static int NUM_MISCSHORTCUTS = sizeof(MISC_SHORTCUTS) / sizeof(SHORTCUT);

// note: do not use 'c' as a shortcut letter
static TDCCONTROL TDCCONTROLS[] =
{
	{ WC_STATIC,    IDS_TDC_FIELD_PROJECT, 0, 0, 0, 3, 28, 8, IDC_PROJECTLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | WS_TABSTOP, 0, 28, 1, 142, 13, IDC_PROJECTNAME },
	{ WC_STATIC,    IDS_TDC_FIELD_TASKLIST, /*WS_NOTVISIBLE*/0, 0, 0, 0, 0, 0, (UINT)IDC_STATIC },
	{ WC_TREEVIEW,  0, TVS_EDITLABELS | WS_TABSTOP | TVS_SHOWSELALWAYS | TVS_HASLINES | TVS_LINESATROOT | TVS_HASBUTTONS, 0, 0, 16, 190, 108, IDC_TASKLIST },
	{ WC_STATIC,    IDS_TDC_FIELD_PRIORITY, SS_CENTERIMAGE, 0, 119, 131, 22, 8, IDC_PRIORITYLABEL },
	{ WC_COMBOBOX,  0, CBS_DROPDOWNLIST | WS_VSCROLL | WS_TABSTOP | CBS_OWNERDRAWFIXED | CBS_HASSTRINGS, 0, 159, 128, 65, 300, IDC_PRIORITY },
	{ WC_STATIC,    IDS_TDC_FIELD_RISK, SS_CENTERIMAGE, 0, 119, 131, 22, 8, IDC_RISKLABEL },
	{ WC_COMBOBOX,  0, CBS_DROPDOWNLIST | WS_VSCROLL | WS_TABSTOP, 0, 159, 128, 65, 300, IDC_RISK },
	{ WC_STATIC,    IDS_TDC_FIELD_PERCENT, SS_CENTERIMAGE, 0, 119, 148, 37, 8, IDC_PERCENTLABEL },
	{ WC_EDIT,      0, WS_TABSTOP, 0, 159, 146, 65, 13, IDC_PERCENT },
	{ WC_SPIN,      0, UDS_SETBUDDYINT | UDS_ALIGNRIGHT | UDS_ARROWKEYS, 0, 97, 180, 13, 14, IDC_PERCENTSPIN },
	{ WC_STATIC,    IDS_TDC_FIELD_TIMEEST, SS_CENTERIMAGE, 0, 1, 148, 40, 8, IDC_TIMEESTLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | WS_TABSTOP, 0, 45, 146, 65, 13, IDC_TIMEEST },
	{ WC_STATIC,    IDS_TDC_FIELD_TIMESPENT, SS_CENTERIMAGE, 0, 1, 148, 40, 8, IDC_TIMESPENTLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | WS_TABSTOP, 0, 45, 146, 65, 13, IDC_TIMESPENT },
	{ WC_STATIC,    IDS_TDC_FIELD_STARTDATE, SS_CENTERIMAGE, 0, 1, 166, 33, 8, IDC_STARTLABEL },
	{ WC_DATETIMEPICK, 0, DTS_RIGHTALIGN | DTS_SHOWNONE | WS_TABSTOP, 0, 45, 164, 65, 13, IDC_STARTDATE },
	{ WC_STATIC,    IDS_TDC_FIELD_STARTTIME, SS_CENTERIMAGE, 0, 119, 166, 32, 8, IDC_STARTTIMELABEL },
	{ WC_COMBOBOX, 0, CBS_UPPERCASE | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP, 0, 159, 164, 65, 13, IDC_STARTTIME },
	{ WC_STATIC,    IDS_TDC_FIELD_DUEDATE, SS_CENTERIMAGE, 0, 119, 166, 32, 8, IDC_DUELABEL },
	{ WC_DATETIMEPICK, 0, DTS_RIGHTALIGN | DTS_SHOWNONE | WS_TABSTOP, 0, 159, 164, 65, 13, IDC_DUEDATE },
	{ WC_STATIC,    IDS_TDC_FIELD_DUETIME, SS_CENTERIMAGE, 0, 119, 166, 32, 8, IDC_DUETIMELABEL },
	{ WC_COMBOBOX, 0, CBS_UPPERCASE | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP, 0, 159, 164, 65, 13, IDC_DUETIME },
	{ WC_STATIC,    IDS_TDC_FIELD_DONEDATE, SS_CENTERIMAGE, 0, 1, 184, 34, 8, IDC_DONELABEL },
	{ WC_DATETIMEPICK, 0, DTS_RIGHTALIGN | DTS_SHOWNONE | WS_TABSTOP, 0, 45, 182, 65, 13, IDC_DONEDATE },
	{ WC_STATIC,    IDS_TDC_FIELD_DONETIME, SS_CENTERIMAGE, 0, 119, 166, 32, 8, IDC_DONETIMELABEL },
	{ WC_COMBOBOX, 0, CBS_UPPERCASE | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP, 0, 159, 164, 65, 13, IDC_DONETIME },
	{ WC_STATIC,    IDS_TDC_FIELD_RECURRENCE, SS_CENTERIMAGE, 0, 119, 184, 37, 8, IDC_RECURRENCELABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | ES_LEFT | WS_TABSTOP, 0, 159, 182, 65, 13, IDC_RECURRENCE },
	{ WC_STATIC,    IDS_TDC_FIELD_COLOUR, SS_CENTERIMAGE, 0, 1, 131, 38, 8, IDC_COLOURLABEL },
	{ WC_BUTTON,    0, WS_TABSTOP, 0, 1, 131, 38, 8, IDC_COLOUR },
	{ WC_STATIC,    IDS_TDC_FIELD_ALLOCTO, SS_CENTERIMAGE, 0, 1, 131, 38, 8, IDC_ALLOCTOLABEL },
	{ WC_COMBOBOX,  0, CBS_SORT | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP | CBS_OWNERDRAWFIXED | CBS_HASSTRINGS, 0, 45, 128, 65, 200, IDC_ALLOCTO },
	{ WC_STATIC,    IDS_TDC_FIELD_ALLOCBY, SS_CENTERIMAGE, 0, 1, 131, 38, 8, IDC_ALLOCBYLABEL },
	{ WC_COMBOBOX,  0, CBS_SORT | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP, 0, 45, 128, 65, 200, IDC_ALLOCBY },
	{ WC_STATIC,    IDS_TDC_FIELD_STATUS, SS_CENTERIMAGE, 0, 1, 131, 38, 8, IDC_STATUSLABEL },
	{ WC_COMBOBOX,  0, CBS_SORT | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP, 0, 45, 128, 65, 200, IDC_STATUS },
	{ WC_STATIC,    IDS_TDC_FIELD_CATEGORY, SS_CENTERIMAGE, 0, 1, 131, 38, 8, IDC_CATEGORYLABEL },
	{ WC_COMBOBOX,  0, CBS_SORT | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP | CBS_OWNERDRAWFIXED | CBS_HASSTRINGS, 0, 45, 128, 65, 200, IDC_CATEGORY },
	{ WC_STATIC,    IDS_TDC_FIELD_EXTID, SS_CENTERIMAGE, 0, 119, 184, 37, 8, IDC_EXTERNALIDLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | ES_LEFT | WS_TABSTOP, 0, 159, 182, 65, 13, IDC_EXTERNALID },
	{ WC_STATIC,    IDS_TDC_FIELD_COST, SS_CENTERIMAGE, 0, 119, 184, 37, 8, IDC_COSTLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | ES_LEFT | WS_TABSTOP, 0, 159, 182, 65, 13, IDC_COST },
	{ WC_STATIC,    IDS_TDC_FIELD_DEPENDENCY, SS_CENTERIMAGE, 0, 119, 184, 37, 8, IDC_DEPENDSLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | ES_LEFT | WS_TABSTOP, 0, 159, 182, 65, 13, IDC_DEPENDS },
	{ WC_STATIC,    IDS_TDC_FIELD_VERSION, SS_CENTERIMAGE, 0, 119, 184, 37, 8, IDC_VERSIONLABEL },
	{ WC_COMBOBOX,  0, CBS_SORT | CBS_DROPDOWN | WS_VSCROLL | CBS_AUTOHSCROLL | CBS_AUTOHSCROLL | WS_TABSTOP, 0, 45, 128, 65, 200, IDC_VERSION },
	{ WC_STATIC,    IDS_TDC_FIELD_FILEREF, SS_CENTERIMAGE, 0, 119, 184, 37, 8, IDC_FILEPATHLABEL },
	{ WC_EDIT,      0, ES_AUTOHSCROLL | ES_LEFT | WS_TABSTOP, 0, 159, 182, 65, 13, IDC_FILEPATH },
	{ WC_STATIC,    IDS_TDC_FIELD_COMMENTS, SS_CENTERIMAGE, 0, 1, 201, 36, 12, IDC_COMMENTSLABEL },
	{ WC_COMBOBOX,  0, CBS_DROPDOWNLIST | WS_VSCROLL | WS_TABSTOP, 0, 39, 201, 65, 200, IDC_COMMENTSTYPE },
	{ WC_STATIC,    0, SS_ETCHEDHORZ, 0, 35, 204, 187, 2, IDC_HSPLITTER },
};

static int NUM_TDCCTRLS = sizeof(TDCCONTROLS) / sizeof(TDCCONTROL);

static TDCCONTROL FTDCCONTROLS[] =
{
	{ WC_TABCONTROL, 0, TCS_BOTTOM | TCS_HOTTRACK | TCS_TABS | TCS_SINGLELINE | TCS_RIGHTJUSTIFY | TCS_TOOLTIPS | WS_TABSTOP, 0, 28, 1, 142, 13, IDC_FTC_TABCTRL },
	{ WC_LISTVIEW,	0, WS_NOTVISIBLE | LVS_OWNERDRAWFIXED | LVS_REPORT | /*LVS_EDITLABELS | */WS_TABSTOP | LVS_SHOWSELALWAYS, 0, 0, 16, 190, 108, IDC_FTC_TASKLIST },
};

static int NUM_FTDCCTRLS = sizeof(FTDCCONTROLS) / sizeof(TDCCONTROL);

static TDCCOLUMN COLUMNS[] =
{
	{ TDCC_ID, IDS_TDC_COLUMN_ID, IDS_TDLBC_ID, TDC_SORTBYID, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_PARENTID, IDS_TDC_COLUMN_PARENTID, IDS_TDLBC_PARENTID, TDC_SORTBYPARENTID, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_PRIORITY, IDS_TDC_COLUMN_PRIORITY, IDS_TDLBC_PRIORITY,	TDC_SORTBYPRIORITY, DT_CENTER, TRUE, NULL, FALSE, FALSE },
	{ TDCC_RISK, 0x4d, IDS_TDLBC_RISK, TDC_SORTBYRISK, DT_CENTER, TRUE, _T("Wingdings"), TRUE, TRUE },
	{ TDCC_PERCENT, IDS_TDC_COLUMN_PERCENT, IDS_TDLBC_PERCENT, TDC_SORTBYPERCENT, DT_CENTER, TRUE, NULL, FALSE, FALSE },
	{ TDCC_TIMEEST, IDS_TDC_COLUMN_TIMEEST, IDS_TDLBC_TIMEEST, TDC_SORTBYTIMEEST, DT_RIGHT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_TIMESPENT, IDS_TDC_COLUMN_TIMESPENT, IDS_TDLBC_TIMESPENT, TDC_SORTBYTIMESPENT, DT_RIGHT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_TRACKTIME, 0xb9, IDS_TDLBC_TRACKTIME, TDC_SORTBYTIMETRACKING, DT_CENTER, FALSE, _T("Wingdings"), TRUE, TRUE },
	{ TDCC_CREATIONDATE, IDS_TDC_COLUMN_CREATEDATE, IDS_TDLBC_CREATEDATE, TDC_SORTBYCREATIONDATE, DT_RIGHT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_CREATEDBY, IDS_TDC_COLUMN_CREATEDBY, IDS_TDLBC_CREATEDBY, TDC_SORTBYCREATEDBY, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_LASTMOD, IDS_TDC_COLUMN_MODIFYDATE, IDS_TDLBC_MODIFYDATE, TDC_SORTBYLASTMOD, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_RECENTEDIT, IDS_TDC_COLUMN_RECENTEDIT, IDS_TDLBC_RECENTEDIT, TDC_SORTBYRECENTEDIT, DT_CENTER, TRUE, NULL, FALSE, TRUE },
	{ TDCC_STARTDATE, IDS_TDC_COLUMN_STARTDATE, IDS_TDLBC_STARTDATE, TDC_SORTBYSTARTDATE, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_DUEDATE, IDS_TDC_COLUMN_DUEDATE, IDS_TDLBC_DUEDATE, TDC_SORTBYDUEDATE, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_REMAINING, 0x36, IDS_TDLBC_REMAINING, TDC_SORTBYREMAINING, DT_LEFT, TRUE, _T("Wingdings"), TRUE, TRUE },
	{ TDCC_DONEDATE, IDS_TDC_COLUMN_DONEDATE, IDS_TDLBC_DONEDATE, TDC_SORTBYDONEDATE, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_RECURRENCE, IDS_TDC_COLUMN_RECURRENCE, IDS_TDLBC_RECURRENCE, TDC_SORTBYRECURRENCE, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_ALLOCTO, IDS_TDC_COLUMN_ALLOCTO, IDS_TDLBC_ALLOCTO, TDC_SORTBYALLOCTO, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_ALLOCBY, IDS_TDC_COLUMN_ALLOCBY, IDS_TDLBC_ALLOCBY, TDC_SORTBYALLOCBY, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_STATUS, IDS_TDC_COLUMN_STATUS, IDS_TDLBC_STATUS, TDC_SORTBYSTATUS, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_CATEGORY, IDS_TDC_COLUMN_CATEGORY, IDS_TDLBC_CATEGORY, TDC_SORTBYCATEGORY, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_EXTERNALID, IDS_TDC_COLUMN_EXTID, IDS_TDLBC_EXTERNALID, TDC_SORTBYEXTERNALID, DT_RIGHT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_COST, IDS_TDC_COLUMN_COST, IDS_TDLBC_COST, TDC_SORTBYCOST, DT_RIGHT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_VERSION, IDS_TDC_COLUMN_VERSION, IDS_TDLBC_VERSION, TDC_SORTBYVERSION, DT_LEFT, TRUE, NULL, FALSE, TRUE },
	{ TDCC_DEPENDENCY, 0xc3, IDS_TDLBC_DEPENDS, TDC_UNSORTED, DT_LEFT, FALSE, _T("Wingdings"), TRUE, TRUE },
	{ TDCC_FILEREF, 0x3c, IDS_TDLBC_FILEREF, TDC_SORTBYFILEREF, DT_LEFT, FALSE, _T("Wingdings"), TRUE, TRUE },
	{ TDCC_FLAG, 0x4f, IDS_TDLBC_FLAG, TDC_SORTBYFLAG, DT_CENTER, TRUE, _T("Wingdings"), TRUE, FALSE },
	{ TDCC_REMINDER, 0x25, IDS_TDLBC_REMINDER, TDC_UNSORTED, DT_CENTER, TRUE, _T("Wingdings"), TRUE, FALSE },
	{ TDCC_ICON, 0x4a, IDS_TDLBC_ICON, TDC_SORTBYICON, DT_CENTER, TRUE, _T("Wingdings"), TRUE, FALSE },
	{ TDCC_DONE, 0x61, IDS_TDLBC_DONE, TDC_SORTBYDONE, DT_CENTER, TRUE, _T("Marlett"), TRUE, FALSE },

	// special client column
	{ TDCC_CLIENT, IDS_TDC_COLUMN_TASK, IDS_TDLBC_NAME, TDC_SORTBYNAME, DT_LEFT, TRUE, NULL, FALSE, TRUE },
};

static int NUM_COLUMNS = sizeof(COLUMNS) / sizeof(TDCCOLUMN);

static CTRLITEM CTRLITEMS[] =
{
	{ IDC_PRIORITY,     IDC_PRIORITYLABEL,  TDCC_PRIORITY },
	{ IDC_RISK,         IDC_RISKLABEL,      TDCC_RISK },
	{ IDC_PERCENT,      IDC_PERCENTLABEL,   TDCC_PERCENT },
	{ IDC_TIMEEST,      IDC_TIMEESTLABEL,   TDCC_TIMEEST },
	{ IDC_TIMESPENT,    IDC_TIMESPENTLABEL, TDCC_TIMESPENT },
	{ IDC_STARTDATE,    IDC_STARTLABEL,     TDCC_STARTDATE },
	{ IDC_STARTTIME,    IDC_STARTTIMELABEL, TDCC_STARTDATE },
	{ IDC_DUEDATE,      IDC_DUELABEL,       TDCC_DUEDATE },
	{ IDC_DUETIME,      IDC_DUETIMELABEL,   TDCC_DUEDATE },
	{ IDC_DONEDATE,     IDC_DONELABEL,      TDCC_DONEDATE },
	{ IDC_DONETIME,     IDC_DONETIMELABEL,  TDCC_DONEDATE },
	{ IDC_RECURRENCE,   IDC_RECURRENCELABEL, TDCC_RECURRENCE },
	{ IDC_COLOUR,       IDC_COLOURLABEL,    (TDC_COLUMN)-1 },
	{ IDC_ALLOCTO,      IDC_ALLOCTOLABEL,   TDCC_ALLOCTO },
	{ IDC_ALLOCBY,      IDC_ALLOCBYLABEL,   TDCC_ALLOCBY },
	{ IDC_STATUS,       IDC_STATUSLABEL,    TDCC_STATUS },
	{ IDC_CATEGORY,     IDC_CATEGORYLABEL,  TDCC_CATEGORY },
	{ IDC_EXTERNALID,   IDC_EXTERNALIDLABEL, TDCC_EXTERNALID },
	{ IDC_COST,         IDC_COSTLABEL,      TDCC_COST },
	{ IDC_DEPENDS,      IDC_DEPENDSLABEL,   TDCC_DEPENDENCY },
	{ IDC_VERSION,      IDC_VERSIONLABEL,   TDCC_VERSION },
	{ IDC_FILEPATH,     IDC_FILEPATHLABEL,  TDCC_FILEREF },
};

static int NUM_CTRLITEMS = sizeof(CTRLITEMS) / sizeof(CTRLITEM);

static UINT FILTER_OPTIONS[][2] =
{
	{ IDS_FILTER_ANYCATS,       FT_ANYCATEGORY },
	{ IDS_FILTER_ANYPEOPLE,     FT_ANYALLOCTO },
	{ IDS_FILTER_HIDEPARENTS,   FT_HIDEPARENTS },
	{ IDS_FILTER_HIDEOVERDUE,   FT_HIDEOVERDUE },
	{ IDS_FILTER_HIDEDONE,      FT_HIDEDONE },
	{ IDS_FILTER_HIDECOLLAPSED, FT_HIDECOLLAPSED }
};

static int NUM_FILTEROPT = sizeof(FILTER_OPTIONS) / (2 * sizeof(UINT));

static UINT TASK_FILTERS[][2] =
{
	{ IDS_FILTER_ALL,               FT_ALL },
	{ IDS_FILTER_NOTDONE,           FT_NOTDONE },
	{ IDS_FILTER_DONE,              FT_DONE },
	{ IDS_FILTER_DUETODAY,          FT_DUETODAY },
	{ IDS_FILTER_DUETOMORROW,       FT_DUETOMORROW },
	{ IDS_FILTER_DUEENDTHISWEEK,    FT_DUEENDTHISWEEK },
	{ IDS_FILTER_DUEENDNEXTWEEK,    FT_DUEENDNEXTWEEK },
	{ IDS_FILTER_DUEENDTHISMONTH,   FT_DUEENDTHISMONTH },
	{ IDS_FILTER_DUEENDNEXTMONTH,   FT_DUEENDNEXTMONTH },
	{ IDS_FILTER_DUEENDTHISYEAR,    FT_DUEENDTHISYEAR },
	{ IDS_FILTER_DUEENDNEXTYEAR,    FT_DUEENDNEXTYEAR },
	{ IDS_FILTER_DUENEXTSEVENDAYS,  FT_DUENEXTSEVENDAYS },
	{ IDS_FILTER_STARTTODAY,        FT_STARTTODAY },
	{ IDS_FILTER_STARTENDTHISWEEK,  FT_STARTENDTHISWEEK },
	{ IDS_FILTER_STARTNEXTSEVENDAYS, FT_STARTNEXTSEVENDAYS },
	{ IDS_FILTER_FLAGGED,           FT_FLAGGED }
};

static int NUM_TASKFILTER = sizeof(TASK_FILTERS) / (2 * sizeof(UINT));

static TDCATTRIBUTE ATTRIBUTES[] =
{
	{ TDCA_NONE, 0 },
	{ TDCA_TASKNAME, IDS_TDLBC_TITLE },
	{ TDCA_DONEDATE, IDS_TDLBC_DONEDATE },
	{ TDCA_DUEDATE, IDS_TDLBC_DUEDATE },
	{ TDCA_STARTDATE, IDS_TDLBC_STARTDATE },
	{ TDCA_PRIORITY, IDS_TDLBC_PRIORITY },
	{ TDCA_COLOR, IDS_TDLBC_COLOR },
	{ TDCA_ALLOCTO, IDS_TDLBC_ALLOCTO },
	{ TDCA_ALLOCBY, IDS_TDLBC_ALLOCBY },
	{ TDCA_STATUS, IDS_TDLBC_STATUS },
	{ TDCA_CATEGORY, IDS_TDLBC_CATEGORY },
	{ TDCA_PERCENT, IDS_TDLBC_PERCENT },
	{ TDCA_TIMEEST, IDS_TDLBC_TIMEEST },
	{ TDCA_TIMESPENT, IDS_TDLBC_TIMESPENT },
	{ TDCA_FILEREF, IDS_TDLBC_FILEREF },
	{ TDCA_PROJNAME, IDS_TDLBC_PROJECTNAME },
	{ TDCA_FLAG, IDS_TDLBC_FLAG },
	{ TDCA_CREATIONDATE, IDS_TDLBC_CREATEDATE },
	{ TDCA_CREATEDBY, IDS_TDLBC_CREATEDBY },
	{ TDCA_RISK, IDS_TDLBC_RISK },
	{ TDCA_EXTERNALID, IDS_TDLBC_EXTERNALID },
	{ TDCA_COST, IDS_TDLBC_COST },
	{ TDCA_DEPENDENCY, IDS_TDLBC_DEPENDS },
	{ TDCA_RECURRENCE, IDS_TDLBC_RECURRENCE },
	{ TDCA_VERSION,	IDS_TDLBC_VERSION  },
	{ TDCA_POSITION, IDS_TDLBC_POS },
	{ TDCA_ID, IDS_TDLBC_ID },
	{ TDCA_PARENTID, IDS_TDLBC_PARENTID },
	{ TDCA_LASTMOD, IDS_TDLBC_MODIFYDATE },
	{ TDCA_COMMENTS, IDS_TDLBC_COMMENTS },
	{ TDCA_TASKNAMEORCOMMENTS, IDS_TDLBC_TITLEORCOMMENTS },
	{ TDCA_ANYTEXTATTRIBUTE, IDS_TDLBC_ANYTEXTATTRIB },
};

static int ATTRIB_COUNT = sizeof(ATTRIBUTES) / sizeof(TDCATTRIBUTE);

static TDCOPERATOR OPERATORS[] =
{
	{ FO_NONE, 0 },
	{ FO_EQUALS, IDS_FP_EQUALS },
	{ FO_NOT_EQUALS, IDS_FP_NOT_EQUALS },
	{ FO_INCLUDES, IDS_FP_INCLUDES },
	{ FO_NOT_INCLUDES, IDS_FP_NOT_INCLUDES },
	{ FO_ON_OR_BEFORE, IDS_FP_ON_OR_BEFORE },
	{ FO_BEFORE, IDS_FP_BEFORE },
	{ FO_ON_OR_AFTER, IDS_FP_ON_OR_AFTER },
	{ FO_AFTER, IDS_FP_AFTER },
	{ FO_GREATER_OR_EQUAL, IDS_FP_GREATER_OR_EQUAL },
	{ FO_GREATER, IDS_FP_GREATER },
	{ FO_LESS_OR_EQUAL, IDS_FP_LESS_OR_EQUAL },
	{ FO_LESS, IDS_FP_LESS },
	{ FO_SET, IDS_FP_SET },
	{ FO_NOT_SET, IDS_FP_NOT_SET }
};

static int OP_COUNT = sizeof(OPERATORS) / sizeof(TDCOPERATOR);

#endif // AFX_TDCSTATIC_H__5951FDE6_508A_4A9D_A55D_D16EB026AEF7__INCLUDED_
