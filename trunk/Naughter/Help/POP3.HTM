<html>

<head>
<title>CPop3Connection v1.35</title>
</head>

<body>

<p align="left"><img src="pop3.gif" width="40" height="40"><font face="Arial"><strong><big><big><big><big>CPop3Connection
v1.35</big></big></big></big></strong></font></p>

<p><font face="Arial">Welcome to <strong>CPop3Connection</strong>, a freeware MFC class to
support the POP3 protocol. POP3 for those not familiar with all the internet protocols is
the protocol used to retrieve internet email. </font></p>

<p><font face="Arial">For detailed information about the <strong>P</strong>ost <strong>O</strong>ffice
<strong>P</strong>rotocol Version <strong>3</strong> you should read RFC 1725.
You should also refer to RFC 822 which contains details on the layout of
messages.</font></p>

<p><font face="Arial">You can find numerous Web Servers which carry these documents by
going to <a href="http://www.yahoo.com">www.yahoo.com</a> and look for RFC and
1725 or 822. </font></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<table>
  <tr>
    <td><font face="Arial"><a href="#Features">Features</a></font></td>
  </tr>
  <tr>
    <td><font face="Arial"><a href="#Usage">Usage</a></font></td>
  </tr>
  <tr>
    <td><font face="Arial"><a href="#Copyright">Copyright</a></font></td>
  </tr>
  <tr>
    <td><font face="Arial"><a href="#History">History</a></font></td>
  </tr>
  <tr>
    <td><font face="Arial"><a href="#APIReference">API Reference</a></font></td>
  </tr>
  <tr>
    <td><font face="Arial"><a href="#Enhancements">Planned Enhancements</a></font></td>
  </tr>
  <tr>
    <td><font face="Arial"><a href="#Contact">Contacting the Author</a></font></td>
  </tr>
</table>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><font face="Arial"><a name="Features"></a><big><strong><big>Features</big></strong></big>
</font>

<ul>
  <li><font color="#000000" size="3" face="Arial">Simple and clean C++ interface.</font></li>
  <li><font color="#000000" size="3" face="Arial">The interface provided is synchronous which
    provides an easier programming model than using asynchronous sockets.</font></li>
  <li><font color="#000000" size="3" face="Arial">The code does not rely on the MFC socket
    classes. These classes have a number of shortcomings, one of which causes problems when
    they are used in NT services.</font></li>
  <li><font color="#000000" size="3" face="Arial">The code can be used in a console
    application without any problems (Again this is not the case for the MFC socket classes).</font></li>
  <li><font color="#000000" size="3" face="Arial">A configurable timeout for the connection
    can be set through the class API.</font></li>
</ul>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a name="Usage"></a><font face="Arial"><big><big><strong>Usage</strong></big></big></font>

<ul>
  <li><font color="#000000" size="3" face="Arial">To use the class in your code simple include
    pop3.cpp in your project and #include pop3.h in which ever of your modules needs to make
    calls to the class. </font></li>
  <li><font face="Arial">To see the class in action, have a look at the code in InitInstance
    in the module &quot;main.cpp&quot;. </font></li>
  <li><font face="Arial">Your code will need to include MFC either statically or dynamically.</font></li>
  <li><font face="Arial">You will need to have a functioning Winsock stack installed and
    correctly initialized prior to calling any functions in CPop3Connection. Depending on your
    application, this will involve calling either WSAStartup or AfxSocketInit at startup of
    your application.</font></li>
  <li><font face="Arial">You will also need to have afxtempl.h and winsock.h or afxsock.h in
    your precompiled header. The code will work just aswell in a GUI or console app. The code
    should also work in a multithreaded application, although it has not be explicitly tested
    in this scenario.</font></li>
</ul>

<p></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><b><font face="Arial" size="5"><a name="Copyright"></a>Copyright</font></b></p>
<p><font face="Arial">You are allowed to include the source code in any product
(commercial, shareware, freeware or otherwise) when your product is released in
binary form. You are allowed to modify the source code in any way you want
except you cannot modify the copyright details at the top of each module. If you
want to distribute source code with your application, then you are only allowed
to distribute versions released by the author. This is to maintain a single
distribution point for the source code.&nbsp;</font></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><font face="Arial"><big><a name="History"></a></big><font color="#000000" size="5"><strong>History</strong></font></font></p>

<p><strong><font color="#000000" size="3" face="Arial">V1.0 (18 M</font><font
face="Arial"><font size="3"><font color="#000000">ay</font></font><font color="#000000"
size="3"> 1998)</font></strong> </font>

<ul>
  <li><font face="Arial" color="#000000" size="3">Initial public release.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.1 (28 June</font><font
face="Arial"><font color="#000000" size="3"> 1998)</font></strong> </font>

<ul>
  <li><font face="Arial">Fixed a potential buffer overflow problem in Delete and Retrieve
    functions when a large message number was specified.</font></li>
  <li><font face="Arial">Improve the ReadResponse code by</font></li>
  <li><font face="Arial">&nbsp;&nbsp;&nbsp; a) passing the readability check onto the socket
    class and </font></li>
  <li><font face="Arial">&nbsp;&nbsp;&nbsp; b) Sleeping for 100 ms prior to looping around
    waiting for new response data</font></li>
  <li><font face="Arial">Classes are now fully Unicode compliant. Unicode build configurations
    are also now included.</font></li>
  <li><font face="Arial">Now supports the TOP POP3 command which can be issued using the
    GetHeader function.</font></li>
  <li><font face="Arial">Fixed a few typos in the documentation.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.11 (4 January 1999</font><font
face="Arial"><font color="#000000" size="3">)</font></strong> </font>

<ul>
  <li><font face="Arial">Minor update to the documentation.</font></li>
  <li><font face="Arial">Now includes VC 5 workspace files as standard.</font></li>
  <li><font face="Arial">Properly Unicode enabled all the code as previously the code exposes
    an Ascii(LPSTR/LPCSTR) API instead of a TCHAR / CString API.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.12 (22 February 1999</font><font
face="Arial"><font color="#000000" size="3">)</font></strong> </font>

<ul>
  <li><font face="Arial">Default timeout for the code when a debug build is built has now been
    set to 60 seconds.</font></li>
  <li><font face="Arial">Improved the reading of responses back from the server by
    implementing a growable receive buffer.</font> </li>
  <li><font face="Arial">Updated instructions on how the relevant RFC documents can be
    retrieved.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.13 (25 March 1999</font><font
face="Arial"><font color="#000000" size="3">)</font></strong> </font>

<ul>
  <li><font face="Arial">Fixed a memory leak in the CPop3Connection::ReadReturnResponse
    function.</font></li>
  <li><font face="Arial">Now sleeps for 250 ms instead of yielding the time slice. This helps
    reduce CPU usage when waiting for data to arrive in the socket</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.14 (15 June 1999)</font></strong> 

<ul>
  <li><font face="Arial">Added functions to return the message body, header or a particular header
    field of a message.</font></li>
  <li><font face="Arial">Tidied up some of the TRACE messages which the code generates.</font></li>
  <li><font face="Arial">Fixed some typos and spelling mistakes in this file.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.15 (16 June 1999)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a bug in the GetHeaderItem function which was causing a header
    item which appeared at the beginning of the header fields to fail to be                          parsed
    incorrectly.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.16 (27 June 1999)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a bug in the GetHeaderItem function when a header spanned                          multiple lines as is allowed by RFC 822.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.17 (29 June 1999)</font></strong> 

<ul>
  <li><font face="Arial"> Another improvement to GetHeaderItem. When will it end &lt;g>. Originally                          this was reported as a bug but upon further investigation it turns out that
    the message which was causing the problems had embedded tabs in the header.                          This is discouraged by the RFC which refers to mail headers (RFC 822).                          The code has been enhanced to handle this case. Thanks to Chris Bishop                          for spotting this.</font></li>
  <li><font face="Arial">Fix for a bug in GetHeaderItem where I accidentally was using "=" instead of
    "==". Thanks to Angelini Fabio for spotting this.</font></li>
  <li><font face="Arial">Updated documentation to refer to RFC 822.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.18 (5 July 1999)</font></strong> 

<ul>
  <li><font face="Arial">Addition of the following functions:<br>
    i)   CPop3Message::GetReplyTo()<br>
                          ii)  CPop3Message::GetRawBody&nbsp;<br>
                          iii) CPop3Message::GetSubject&nbsp;<br>
	                        iv)  CPop3Message::GetFrom&nbsp;<br>
	                        v)   CPop3Message::GetDate&nbsp;</font></li>
  <li><font face="Arial">GetHeaderItem function now uses case insensitive searching.</font></li>
  <li><font face="Arial">GetHeaderItem now allows you to search for the "n'th" header of a specified type.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.19 (24 August 1999)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a bug whereby the function GetHeader was sometimes failing when it
    was called when the message was retrieved using the "TOP" command.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.20 (26 March 2000)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a problem where GetBody and GetRawBody will fail if you call it for a                          CPop3Message object that doesn't have a message in it (i.e m_pszMessage == NULL).                          This was previously causing a goof old access violation in GetRawBody.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.21 (20 September 2000)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a bug in CPop3Connection::UIDL when message id's were returned
    with embedded dots in them. Thanks to Konstantin Vasserman for finding and resolving
    this problem.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">24 March 2001</font></strong> 

<ul>
  <li><font face="Arial">Updated the documentation and copyright info.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.22 (27 July 2001)</font></strong> 

<ul>
  <li><font face="Arial">Added two methods namely: GetTo() and GetCC() to the CPop3Message class.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.23 (11 August 2001)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a bug in CPop3Connection::ReadResponse where determining the terminator
    was failing when an embedded NULL was in the message.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.24 (27 September 2001)</font></strong> 

<ul>
  <li><font face="Arial">Fixed a bug in CPop3Connection::ReadResponse when handling disconnection errors.
    Thanks to Yuheng Zhao for spotting this problem.</font></li>
  <li><font face="Arial">Improved the error handling in Delete, GetMessageSize &amp; GetMessageID methods.
    Thanks to Maxim Y. Melnik for spotting this problem.</font></li>
</ul>

<p><strong><font face="Arial" color="#000000" size="3">V1.25 (29 September 2001)</font></strong> 

<ul>
  <li><font face="Arial"> Further improved the error handling in CPop3Connection::ReadResponse</font></li>
</ul>

<p><strong><font face="Arial" size="3">29 March 2003</font></strong></p>
<ul>
  <li><font face="Arial"><font size="3">Initially I was intending adding file 
  attachment support to the class and numerous people have requested this 
  feature but during my research I came across a much more fully featured C++ 
  encapsulation of MIME that I could possibly implement. The project itself is 
  called Mime++ and the URL is </font>
  <a href="http://www.hunnysoft.com/mimepp/">http://www.hunnysoft.com/mimepp/</a>. 
  The classes provided are nicely implemented in C++ and integrate well with 
  both MFC and my CPop3Connection classes. This software is commercial. 
  Alternatively you could use CDO for Windows 2000 to parse what is returned by 
  the class. I do not propose to add support for attachments in the future so 
  please no more emails asking for this!!</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.26 (5 July 2003)</font></strong></p>
<ul>
  <li><font face="Arial">Added copy constructors and operator= methods to the 
  CPop3Message class. Thanks to &quot;Sten&quot; for pointing out this omission.</font></li>
  <li><font face="Arial">Made destructors of all classes virtual.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.27 (21 July 2003)</font></strong></p>
<ul>
  <li><font face="Arial">Class now preserves last command response across calls 
  to Disconnect. This is especially important in calls to Connect when for 
  example you get the POP3 error &quot;-Err. Can't lock the mailbox&quot; or something 
  like this when you call Connect. Thanks to &quot;Lev Elbert&quot; for reporting this 
  problem and providing the fix. </font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.28 (3 November 2003)</font></strong></p>
<ul>
  <li><font face="Arial">Simplified the code in CPOP3Connection::ReadResponse. 
  Thanks to Clarke Brunt for reporting this issue.</font></li>
  <li><font face="Arial">Reviewed the various trace statements in the code.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.29 (6 November 2003)</font></strong></p>
<ul>
  <li><font face="Arial">Fixed a problem with an unitialized &quot;m_pszMessage&quot; in 
  the CPop3Message constructor. Thanks to Michael Gunlock for reporting this 
  problem.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.30 (12 November 2003)</font></strong></p>
<ul>
  <li><font face="Arial">Fixed a bug in the CPop3Message operator= method. 
  Thanks to Henrik Grek for reporting this bug.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.31 (5 June 2004)</font></strong></p>
<ul>
  <li><font face="Arial">Fixed a bug in CPop3Connection::ReadResponse, where the 
  wrong parameters were being null terminated. Thanks to &quot;caowen&quot; for this 
  update.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.32 (4 July 2004)</font></strong></p>
<ul>
  <li><font face="Arial">Added an IsConnected() method to the CPop3Connection 
  class. Thanks to Alessandro Rosa for this addition.</font></li>
  <li><font face="Arial">Added two new helper functions, namely 
  CPop3Message::GetEmailAddress and CPop3Message::GetEmailFriendlyName. Thanks 
  to Alessandro Rosa for this suggestion.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.33 (9 August 2004)</font></strong></p>
<ul>
  <li><font face="Arial">Fixed a number of compiler warnings when the code is 
  compiled with VC.Net 2003</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.34 (28 March 2005)</font></strong></p>
<ul>
  <li><font face="Arial"> Fixed a number of compiler warnings in the sample app when the code is compiled
    with VC .NET 2003.</font></li>
  <li><font face="Arial">Timeout now defaults to 5 seconds in debug mode.</font></li>
  <li><font face="Arial">Added support for connecting via Socks4, Socks5 and HTTP proxies</font></li>
  <li><font face="Arial">Added support for POP3 via SSL. Thanks to Serhiy Pavlov and Alexey Kuznetsov for
    suggesting this update. Please note that because I do not have access to a mail                          server which provides POP3 over SSL, you should consider this support preliminary
    until I get feedback from users of this feature. The standard POP3 support is still
    fully functional and tested of course.</font></li>
</ul>

<p><strong><font face="Arial" size="3">v1.35 (9 April 2005)</font></strong></p>
<ul>
  <li><font face="Arial"> Updated the initialization code for OpenSSL in the sample app to avoid memory                          leaks. Thanks to Alexey Kuznetsov for reporting these issues. You should implement
    the same initialization and cleanup code in your applications. For details please check
    the code in "main.cpp" module which is enclosed in #ifndef POP3_NOSSL_SUPPORT /                          #endif sections.</font></li>
  <li><font face="Arial">"List" function is now public instead of protected. Thanks to Alexey Kuznetsov for                          reporting these issues.&nbsp;</font></li>
  <li><font face="Arial">Addition of a simple "FindMessageID" which returns the Message index given a message
    ID as returned via UIDL. Thanks to Alexey Kuznetsov for this addition.&nbsp;</font></li>
</ul>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p class="crt"><font face="Arial"><a name="APIReference"></a><big><big><strong>API
Reference</strong></big></big></font></p>

<p><font face="Arial">The API consists of the public member functions of the class
CPop3Connection &amp; CPop3Message</font></p>

<p><font face="Arial"><a href="#Connect">CPop3Connection::Connect<br>
</a><a href="#Disconnect">CPop3Connection::Disconnect<br>
</a><a href="#Statistics">CPop3Connection::Statistics<br>
</a><a href="#Delete">CPop3Connection::Delete<br>
</a><a href="#GetMessageSize">CPop3Connection::GetMessageSize</a><br>
<a href="#GetMessageID">CPop3Connection::GetMessageID</a><br>
<a href="#Retrieve">CPop3Connection::Retrieve<br>
</a><a href="#Reset">CPop3Connection::Reset<br>
</a><a href="#UIDL">CPop3Connection::UIDL</a><br>
<a href="#GetMessageHeader">CPop3Connection::GetMessageHeader<br>
</a><a href="#Noop">CPop3Connection::Noop<br>
</a><a href="#GetLastCommandResponse">CPop3Connection::GetLastCommandResponse<br>
</a><a href="#GetTimeout">CPop3Connection::GetTimeout<br>
</a><a href="#SetTimeout">CPop3Connection::SetTimeout<br>
</a><a href="#GetMessageText">CPop3Message::GetMessageText
</a></font><a href="#GetMessageText"><br>
</a><font face="Arial"><a href="#GetHeader">CPop3Message::GetHeader</a></font><a href="#GetMessageText"><br>
</a><font face="Arial"><a href="#GetHeaderItem">CPop3Message::GetHeaderItem</a></font><a href="#GetMessageText"><br>
</a><font face="Arial"><a href="#GetBody">CPop3Message::GetBody<br>
</a></font><font face="Arial"><a href="#GetReplyTo">CPop3Message::GetReplyTo</a><br>
<a href="#GetRawBody">CPop3Message::GetRawBody</a><br>
<a href="#GetSubject">CPop3Message::GetSubject</a><br>
<a href="#GetFrom">CPop3Message::GetFrom</a><br>
<a href="#GetDate">CPop3Message::GetDate</a></font></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a name="Connect"></a><big><strong><font face="Arial">CPop3Connection::Connect</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::Connect(LPCSTR </strong><em>pszHostName</em><strong>,
LPCSTR </strong><em>pszUser</em><strong>, &nbsp; LPCSTR </strong><em>pszPassword</em><strong>,
int </strong><em>nPort</em><strong> = 110);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>pszHostName</em> The network address of the socket to connect
to: a machine name such as &#147;mail.yourisp.com&#148;, or a dotted number such as
&#147;128.56.22.8&#148;.</font></p>

<p><font face="Arial"><em>pszUser</em> This is the POP3 user name of the mailbox.</font></p>

<p><font face="Arial"><em>pszPassword</em> This is the password for the POP3 mailbox.</font></p>

<p><font face="Arial"><em>nPort</em> This is the port number on which to connect. The
default value is 110 which is the default POP3 port number.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Call this member function to establish a connection to a POP3
mailbox.</font></p>

<p><strong><font face="Arial">See Also</font></strong></p>

<p><a href="#Disconnect"><font face="Arial">CPop3Connection::Disconnect</font></a></p>

<p>&nbsp;</p>

<p><a name="Disconnect"></a><big><strong><font face="Arial">CPop3Connection::Disconnect</font></strong></big></p>

<p><strong><font face="Arial">BOOL CPop3Connection::Disconnect();</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">The corollary function of Connect.</font></p>

<p><strong><font face="Arial">See Also</font></strong></p>

<p><a href="#Connect"><font face="Arial">CPop3Connection::Connect</font></a></p>

<p>&nbsp;</p>

<p><a name="Statistics"></a><big><strong><font face="Arial">CPop3Connection::Statistics</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::Statistics(int&amp; </strong><em>nNumberOfMails</em><strong>,
int&amp; </strong><em>nTotalMailSize</em><strong>);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>nNumberOfMails</em> Upon a successful return this will contain
the number of mails waiting in the mailbox.</font></p>

<p><font face="Arial"><em>nTotalMailSize</em> Upon a successful return this will contain
the size in bytes (aka Octets) of all mails waiting in the mailbox.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Retrieves the statistics for the Mailbox by issuing the
&quot;STAT&quot; command.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#GetMessageSize"><font face="Arial">CPop3Connection::GetMessageSize</font></a></p>

<p>&nbsp;</p>

<p><a name="Delete"></a><big><strong><font face="Arial">CPop3Connection::Delete</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::Delete(int </strong><em>nMsg</em><strong>);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>nMsg</em> The message number of the message to delete. This
value starts at 1.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Marks a message as &quot;to be deleted&quot; by issuing the
&quot;DELE&quot; command.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#Reset"><font face="Arial">CPop3Connection::Reset</font></a></p>

<p>&nbsp;</p>

<p><a name="GetMessageSize"></a><big><strong><font face="Arial">CPop3Connection::GetMessageSize</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::GetMessageSize(int </strong><em>nMsg</em><strong>,
DWORD&amp; </strong><em>dwSize</em><strong>);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>nMsg</em> The message number of the message to retrieve the size
of.</font></p>

<p><font face="Arial"><em>dwSize</em> Upon a successful return this will contain the size
in bytes of the specified message.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Retrieves the size of a specified message. Internally this will
issue the &quot;LIST&quot; command if required.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#Retrieve"><font face="Arial">CPop3Connection::Retrieve</font></a></p>

<p>&nbsp;</p>

<p><a name="GetMessageID"></a><big><strong><font face="Arial">CPop3Connection::GetMessageID</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::GetMessageID(int </strong><em>nMsg</em><strong>,
CString&amp; </strong><em>sID</em><strong>);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>nMsg</em> The message number of the message to retrieve the ID
of.</font></p>

<p><font face="Arial"><em>sID</em> Upon a successful return this will contain the ID of
the specified message as a string.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Retrieves the ID of a specified message. Internally this will issue
the &quot;UIDL&quot; command if required. As &quot;UIDL&quot; is an optional POP3 command,
your client app should handle the return value if it is to correctly work on all POP3
servers.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#UIDL"><font face="Arial">CPop3Connection::UIDL</font></a></p>

<p>&nbsp;</p>

<p><a name="Retrieve"></a><big><strong><font face="Arial">CPop3Connection::Retrieve</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::Retrieve(int </strong><em>nMsg</em><strong>,
CPop3Message&amp; </strong><em>message</em><strong>);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>nMsg</em> The message number of the message to retrieve the size
of.</font></p>

<p><font face="Arial"><em>message</em> Upon a successful return this will contain the POP3
messages.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Retrieves the specified message by issuing the &quot;RETR&quot;
command.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#GetMessageSize"><font face="Arial">CPop3Connection::GetMessageSize</font></a></p>

<p>&nbsp;</p>

<p><a name="GetMessageHeader"></a><big><strong><font face="Arial">CPop3Connection::GetMessageHeader</font></strong></big></p>

<p><font face="Arial"><strong>BOOL CPop3Connection::GetMessageHeader(int </strong><em>nMsg</em><strong>,
CPop3Message&amp; </strong><em>message</em><strong>);</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>nMsg</em> The message number of the message to retrieve the
header of.</font></p>

<p><font face="Arial"><em>message</em> Upon a successful return this will contain the POP3
message header.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Retrieves the header of a specified message. Internally this will
issue the &quot;TOP&quot; command if required. As &quot;TOP&quot; is an optional POP3
command, your client app should handle the return value if it is to correctly work on all
POP3 servers.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#GetMessage"><font face="Arial">CPop3Connection::GetMessage</font></a></p>

<p>&nbsp;</p>

<p><a name="Reset"></a><big><strong><font face="Arial">CPop3Connection::Reset</font></strong></big></p>

<p><strong><font face="Arial">BOOL CPop3Connection::Reset();</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Resets all messages which were previously marked as deleted. i.e. it
undoes the work of all the DELE commands in this session. For further information about
how messages are deleted in POP3, please refer to the RFC.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#Delete"><font face="Arial">CPop3Connection::Delete</font></a></p>

<p>&nbsp;</p>

<p><a name="UIDL"></a><big><strong><font face="Arial">CPop3Connection::UIDL</font></strong></big></p>

<p><strong><font face="Arial">BOOL CPop3Connection::UIDL();</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Sends the &quot;UIDL&quot; command which retrieves the ID for a
specified message. As &quot;UIDL&quot; is an optional POP3 command, your client app should
handle the return value if it is to correctly work on all POP3 servers.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#GetMessageID"><font face="Arial">CPop3Connection::GetMessageID</font></a></p>

<p>&nbsp;</p>

<p><a name="Noop"></a><big><strong><font face="Arial">CPop3Connection::Noop</font></strong></big></p>

<p><strong><font face="Arial">BOOL CPop3Connection::Noop();</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">If the function succeeds, the return value is TRUE. If the
function fails, the return value is FALSE. To get extended error information, call
::GetLastError.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Issues a &quot;NOOP&quot; command to the server.</font></p>

<p>&nbsp;</p>

<p><a name="GetLastCommandResponse"></a><big><strong><font face="Arial">CPop3Connection::GetLastCommandResponse</font></strong></big></p>

<p><strong><font face="Arial">CString CPop3Connection::GetLastCommandResponse() const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">The last command response from the server as a CString.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">The CPop3Connection class can return additional text information
along with most errors. This extended error information can be retrieved by using the
GetLastCommandResponse function after an unsuccessful function call. An example of this is
if the Connect function failed because of a validation problem, GetLastCommandResponse
could return something like &quot;-ERR Access is denied&quot;. GetLastCommandResponse can
be called multiple times until another CPop3Connection function is called which sends a
POP3 command. </font></p>

<p>&nbsp;</p>

<p><a name="GetTimeout"></a><big><strong><font face="Arial">CPop3Connection::GetTimeout</font></strong></big></p>

<p><strong><font face="Arial">DWORD CPop3Connection::GetTimeout() const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">The timeout in milliseconds which the code will wait for
responses from the POP3 server.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Since CPop3Connection provides a synchronous API, a timeout
mechanism is provided. By default the value is 2 seconds in release mode and 20 seconds in
debug mode. The value is larger in debug mode so that the code does not time out when you
are debugging it.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#SetTimeout"><font face="Arial">CPop3Connection::SetTimeout</font></a></p>

<p>&nbsp;</p>

<p><a name="SetTimeout"></a><strong><font face="Arial"><big>CPop3Connection::SetTimeout</big></font></strong></p>

<p><font face="Arial"><strong>void CPop3Connection::SetTimeout(DWORD </strong><em>dwTimeout</em><strong>)
const;</strong></font></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial"><em>dwTimeout</em> The new timeout value in milliseconds.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Sets the timeout to use for connections to the POP3 server.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#GetTimeout"><font face="Arial">CPop3Connection::GetTimeout</font></a></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a name="GetMessageText" href="#GetMessageText"></a><big><strong><font face="Arial">CPop3Message::GetMessageText</font></strong></big></p>

<p><strong><font face="Arial">LPCSTR </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetMessageText() const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A character pointer to the actual message text this class
instance represents.</font></p>

<p><font face="Arial"><strong>Parameters</strong></font></p>

<p><font face="Arial">None.</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Upon a successful call to CPop3Connection::Retrieve, the message
class will contain a message. This function allows the text to of the message to be
accessed.</font></p>

<p><strong><font face="Arial">See Also </font></strong></p>

<p><a href="#Retrieve"><font face="Arial">CPop3Connection::Retrieve</font></a></p>

<p>&nbsp;</p>

<p><a name="GetHeader" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetHeader</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetHeader()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the header of this message</font></p>

<p>&nbsp;</p>

<p><a name="GetBody" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetBody</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetBody()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the body of this message</font></p>

<p>&nbsp;</p>

<p><a name="GetHeaderItem" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetHeaderItem</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetHeaderItem(const
CString&amp; sName, int nItem = 0) const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the header body of the
header field</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial"> This function allows a specific message header line to be
retrieved e.g you could call the function with sName set to &quot;Date&quot; to
find the date the mail message was sent at. The return value is a CString which
follows the internet convention for that particular header. The nItem parameter
allows you to specify that the n'th occurrence of the header field be returned.</font></p>

<p>&nbsp;</p>

<p><a name="GetReplyTo" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetReplyTo</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetReplyTo()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the Reply to field</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial">Returns the most appropriate address for replies.  Looks first for
Reply-To, then From, then Sender, then Return-Path as a last resort, returns the first one of the above that is non-empty.</font></p>

<p>&nbsp;</p>

<p><a name="GetRawBody" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetRawBody</big></font></strong></p>

<p><strong><font face="Arial">LPCSTR </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetRawBody()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A const char pointer to the raw message body</font></p>

<p>&nbsp;</p>

<p><a name="GetSubject" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetSubject</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetSubject()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the subject of the message</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial"> Returns the subject of the message.</font></p>

<p>&nbsp;</p>

<p><a name="GetFrom" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetFrom</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetFrom()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the sender of the message</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial"> Returns the sender of the message.</font></p>

<p>&nbsp;</p>

<p><a name="GetDate" href="#GetMessageText"></a><strong><font face="Arial"><big>CPop3Message::GetDate</big></font></strong></p>

<p><strong><font face="Arial">CString </font></strong><font face="Arial"><strong>CPop3Message</strong></font><strong><font face="Arial">::GetDate()
const;</font></strong></p>

<p class="rl"><strong><font face="Arial">Return Value</font></strong></p>

<p class="t"><font face="Arial">A CString containing the &quot;Date:&quot;
header of the message</font></p>

<p><font face="Arial"><strong>Remarks</strong></font></p>

<p><font face="Arial"> Returns the &quot;Date:&quot; header of the message.</font></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><font face="Arial"><big><a name="Enhancements"></a></big><font color="#000000" size="4"><strong>PLANNED
ENHANCEMENTS</strong></font> </font>

<ul>
  <li><font face="Arial">Implement support for the APOP command.</font></li>
  <li><font face="Arial">Provide a better sample app. At the moment, it's very much a test
    program which tests all of the functions.</font></li>
  <li><font face="Arial" color="#000000" size="3">If you have any other suggested
    improvements, please let me know so that I can incorporate them into the next release.</font></li>
</ul>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><font face="Arial"><a name="Contact"></a><font color="#000000" size="4"><strong>CONTACTING
THE AUTHOR</strong></font></font></p>

<p><font face="Arial" color="#000000" size="3">PJ Naughter<br>
Email: <a href="mailto:pjna@naughter.com">pjna@naughter.com</a><br>
Web: <a href="http://www.naughter.com">http://www.naughter.com</a><br>
9 April 2005</font></p>
</body>
</html>